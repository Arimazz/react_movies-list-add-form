{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/TextField/TextField.js","components/Constants/UrlRegExp.js","components/NewMovie/InputsFromServer.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","TextField","props","value","onChange","label","name","placeholder","error","onBlur","inputClass","htmlFor","id","type","autoComplete","UrlRegExp","RegExp","InputsFromServer","NewMovie","state","titleError","imgUrlError","imdbUrlError","handleChange","event","target","setState","trimStart","handleSubmit","preventDefault","test","onAdd","resetState","checkOnBlur","checkAllValidation","onSubmit","this","input","disabled","Component","App","moviesFromServer","addMovie","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb258134.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TextField = (props) => {\n  const {\n    value,\n    onChange,\n    label,\n    name,\n    placeholder,\n    error,\n    onBlur,\n  } = props;\n\n  const inputClass = error ? 'input is-danger' : 'input ';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          onBlur={onBlur}\n          id={name}\n          name={name}\n          className={inputClass}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n      {error && (\n        <p className=\"help is-danger\">\n          {error}\n        </p>\n      )}\n    </div>\n  );\n};\n\nTextField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  onBlur: PropTypes.func.isRequired,\n};\n\nTextField.defaultProps = {\n  placeholder: 'Enter text here',\n  error: '',\n};\n","// eslint-disable-next-line max-len\nexport const UrlRegExp = RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n","export const InputsFromServer = [\n  {\n    name: 'title',\n    label: 'Movie title',\n    placeholder: 'Input new movie title',\n    error: 'titleError',\n  },\n  {\n    name: 'description',\n    label: 'Movie description',\n    placeholder: 'Input new movie description',\n    error: null,\n  },\n  {\n    name: 'imgUrl',\n    label: 'Movie imgUrl',\n    placeholder: 'Input new movie imgUrl',\n    error: 'imgUrlError',\n  },\n  {\n    name: 'imdbUrl',\n    label: 'Movie imdbUrl',\n    placeholder: 'Input new movie imdbUrl',\n    error: 'imdbUrlError',\n  },\n  {\n    name: 'imdbId',\n    label: 'Movie imdbId',\n    placeholder: 'Input new movie imdbId',\n    error: null,\n  },\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '../TextField/TextField';\nimport { UrlRegExp } from '../Constants/UrlRegExp';\nimport { InputsFromServer } from './InputsFromServer';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: '',\n    imgUrlError: '',\n    imdbUrlError: '',\n  };\n\n  handleChange = (event) => {\n    const { target: { name, value } } = event;\n\n    this.setState({\n      [name]: value.trimStart(),\n      titleError: '',\n      imgUrlError: '',\n      imdbUrlError: '',\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (title === '') {\n      this.setState({\n        titleError: 'Title is required',\n      });\n\n      return;\n    }\n\n    if (!UrlRegExp.test(imgUrl)) {\n      this.setState({\n        imgUrlError: 'Enter valid imgUrl',\n      });\n\n      return;\n    }\n\n    if (!UrlRegExp.test(imdbUrl)) {\n      this.setState({\n        imdbUrlError: 'Enter valid imdbgUrl',\n      });\n\n      return;\n    }\n\n    this.props.onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.resetState();\n  }\n\n  resetState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleError: '',\n      imgUrlError: '',\n      imdbUrlError: '',\n    });\n  }\n\n  checkOnBlur = ({ target: { name } }) => {\n    if (name === 'title') {\n      if (this.state.title === '') {\n        this.setState({\n          titleError: 'enter valid title',\n        });\n      }\n    }\n\n    if (name === 'imgUrl') {\n      if (!UrlRegExp.test(this.state.imgUrl)) {\n        this.setState({\n          imgUrlError: 'Enter valid imgUrl',\n        });\n      }\n    }\n\n    if (name === 'imdbUrl') {\n      if (!UrlRegExp.test(this.state.imdbUrl)) {\n        this.setState({\n          imdbUrlError: 'Enter valid imdbUrl',\n        });\n      }\n    }\n  }\n\n  checkAllValidation = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    if (title !== ''\n      && UrlRegExp.test(imgUrl)\n      && UrlRegExp.test(imdbUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <form name=\"newMovie\" onSubmit={this.handleSubmit}>\n        {InputsFromServer.map(input => (\n          <TextField\n            key={input.name}\n            onBlur={this.checkOnBlur}\n            name={input.name}\n            label={input.label}\n            placeholder={input.placeholder}\n            value={this.state[input.name]}\n            onChange={this.handleChange}\n            error={this.state[input.error]}\n          />\n        ))}\n\n        <button\n          type=\"submit\"\n          className=\"button is-link\"\n          disabled={this.checkAllValidation()}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(({ movies }) => {\n      return {\n        movies: [...movies, newMovie],\n      };\n    });\n  };\n\n  render() {\n    const {\n      movies,\n    } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/Inputs.js","components/NewMovie/inputArray.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Inputs","inputs","handleChange","getState","item","type","id","onChange","value","stateKey","name","placeholder","inputArray","NewMovie","state","event","setState","target","getMovie","preventDefault","resetState","handleSubmit","props","addMovie","onSubmit","this","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1f0bce4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Inputs = ({ inputs, handleChange, getState }) => (\n  <>\n    {inputs.map((item) => {\n      switch (item.type) {\n        case 'text':\n          return (\n            <input\n              key={item.id}\n              onChange={handleChange}\n              value={getState(item.stateKey)}\n              name={item.title}\n              placeholder={item.title}\n              type={item.type}\n            />\n          );\n\n        case 'textarea':\n          return (\n            <textarea\n              key={item.id}\n              onChange={handleChange}\n              value={getState(item.stateKey)}\n              name={item.title}\n              placeholder={item.title}\n              type={item.type}\n            />\n          );\n\n        default:\n          return <></>;\n      }\n    })}\n  </>\n);\n\nInputs.propTypes = {\n  getState: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  inputs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    state: PropTypes.shape,\n    id: PropTypes.number,\n    type: PropTypes.string,\n  })).isRequired,\n};\n","export const inputArray = [\n  {\n    title: 'title', stateKey: 'title', id: 1, type: 'text',\n  },\n  {\n    title: 'description', stateKey: 'description', id: 2, type: 'textarea',\n  },\n  {\n    title: 'imgUrl', stateKey: 'imgUrl', id: 3, type: 'text',\n  },\n  {\n    title: 'imdbUrl', stateKey: 'imdbUrl', id: 4, type: 'text',\n  },\n  {\n    title: 'imdbId', stateKey: 'imdbId', id: 5, type: 'text',\n  },\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport { Inputs } from './Inputs';\nimport { inputArray } from './inputArray';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  getMovie = (event) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    event.preventDefault();\n\n    return {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n  }\n\n  resetState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  handleSubmit = (event) => {\n    this.props.addMovie(this.getMovie(event));\n    this.resetState();\n  };\n\n  getState = (key) => {\n    return this.state[key];\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n\n        <Inputs\n          inputs={inputArray}\n          handleChange={this.handleChange}\n          getState={this.getState}\n        />\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}